{{ $computerName := output "scutil" "--get" "ComputerName" | trim }}
{{- if eq $computerName "aleksey-korolev" -}}
command_timeout = 1000
{{ end -}}

[custom.bartib]
format = '[ó°¥” $output]($style) '
style = "#767676"
command = "bartib current | sed -n '3p' | cut -d' ' -f'3-' | sed -E 's/\\xC2\\xA0+//g; s/[^,](([0-9]+h )?<?[0-9]+m)/,\\1/; s/ ([^ ]+),/,\\1,/' | awk -F',' '{print $3, \"[\"$2\"]\", $1}'"
shell = ["sh", "--norc"]
when = "bartib current | grep -q -v 'No Activity is currently running'"

[custom.jj]
ignore_timeout = true
description = "current jj status"
symbol = ""
when = true
command = '''
jj root > /dev/null && jj log --revisions @ --no-graph --ignore-working-copy --color always --limit 1 --template '
  separate(" ",
    "ðŸ¥‹",
    change_id.shortest(4),
    bookmarks,
    "|",
    concat(
      if(conflict, "ðŸ’¥"),
      if(divergent, "ðŸš§"),
      if(hidden, "ðŸ‘»"),
      if(immutable, "ðŸ”’"),
    ),
    raw_escape_sequence("\x1b[1;32m") ++ if(empty, "(empty)"),
    raw_escape_sequence("\x1b[1;32m") ++ if(description.first_line().len() == 0,
      "(no description set)",
      if(description.first_line().substr(0, 29) == description.first_line(),
        description.first_line(),
        description.first_line().substr(0, 29) ++ "â€¦",
      )
    ) ++ raw_escape_sequence("\x1b[0m"),
  )
'
'''

# disable git modules
[git_state]
disabled = true

[git_commit]
disabled = true

[git_metrics]
disabled = true

[git_branch]
disabled = true

# re-enable git_branch as long as we're not in a jj repo
[custom.git_branch]
when = true
command = "jj root >/dev/null 2>&1 || starship module git_branch"
description = "Only show git_branch if we're not in a jj repo"
